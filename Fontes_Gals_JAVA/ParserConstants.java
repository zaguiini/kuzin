public interface ParserConstants
{
    int START_SYMBOL = 40;

    int FIRST_NON_TERMINAL    = 40;
    int FIRST_SEMANTIC_ACTION = 74;

    int[][] PARSER_TABLE =
    {
        { -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1,  0, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1, -1,  4, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  7,  7,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  8,  9, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 17, 17, 17, 17, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, 17, 17, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 17, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 19, 19, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 23, 23, 23, 23, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, 23, 23, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, 23, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 39, 39, 39, 39, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, 39, 39, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 42, 42, -1, -1, -1, -1, -1, -1, 40, 41, -1, 42, 42, 42, 42, 42, -1, -1, -1, 42, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, 42, -1, -1, -1 },
        { -1, 43, 43, 43, 43, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, 45, 44, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 47, 47, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 51, 52, 53, 54, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 56, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 59, 59, -1, -1, -1, -1, -1, -1, 59, 59, -1, 59, 59, 59, 59, 59, -1, -1, -1, 59, -1, 59, 59, 59, 59, 59, 59, 59, 57, 58, -1, -1, -1, -1, 59, 59, -1, -1, -1 },
        { -1, 60, 60, 60, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 65, 65, -1, -1, -1, -1, -1, -1, 65, 65, -1, 65, 65, 65, 65, 65, -1, -1, -1, 65, -1, 65, 65, 65, 65, 65, 65, 65, 65, 65, 61, 62, 63, 64, 65, 65, -1, -1, -1 },
        { -1, 66, 67, 68, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, 71, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        {  5,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6,  5,  5,  6,  5, -1, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 15, 15, 15, 15, 16, 16, 16, -1, -1, 15, -1, -1, -1, -1, -1, 15, 15, 16, -1, 15, -1, -1, -1, -1, -1, -1, -1, 15, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, 28, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, 36, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 49, 49, -1, -1, -1, -1, -1, -1, 49, 49, -1, 49, 49, 49, 49, 49, -1, -1, -1, 49, -1, 49, 48, 48, 48, 48, 48, 48, -1, -1, -1, -1, -1, -1, 49, 49, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 13, 14 }
    };

    int[][] PRODUCTIONS = 
    {
        {  89,  41,  90 },
        {  44,  65 },
        {  47,  65 },
        {  49,  65 },
        {  54,  65 },
        {   0 },
        {  41 },
        {  43 },
        {   6 },
        {   7 },
        {   8 },
        {   2,  96,  73 },
        {  37,  66 },
        {  38,  97,  55, 110 },
        {  39,  97,  55, 110 },
        {  45 },
        {  46 },
        {  55,  98 },
        {  99,  19,  21,  67,  22, 100 },
        {  42,  99,  21,  19,  21,  67,  22,  22, 100 },
        {   5,  95,  88 },
        {   0 },
        {  20,  21,  48,  22 },
        {  55,  88,  68 },
        {   0 },
        {  35,  48 },
        {  12,  55, 101,  36,  41,  69 },
        {  50 },
        {  51 },
        {  52 },
        {  16, 102 },
        { 105,  14,  36,  41,  16, 102 },
        {  53,  70 },
        {  16, 102 },
        {  51 },
        { 103,  13,  55, 104,  36,  41,  71 },
        {   0 },
        {  53 },
        { 106,  15,  55, 107,  36,  41,  16, 108 },
        {  57,  56 },
        {   9,  57,  91,  56 },
        {  10,  57,  92,  56 },
        {   0 },
        {  58 },
        {  18,  85 },
        {  17,  86 },
        {  11,  57,  87 },
        {  60,  72 },
        {  59,  83,  60,  84 },
        {   0 },
        {  23 },
        {  24 },
        {  25 },
        {  26 },
        {  27 },
        {  28 },
        {  62,  61 },
        {  29,  62,  75,  61 },
        {  30,  62,  76,  61 },
        {   0 },
        {  64,  63 },
        {  31,  64,  77,  63 },
        {  32,  64,  78,  63 },
        {  33,  64,  93,  63 },
        {  34,  64,  94,  63 },
        {   0 },
        {   2, 109 },
        {   3,  79 },
        {   4,  80 },
        {   5,  95 },
        {  21,  55,  22 },
        {  29,  64,  81 },
        {  30,  64,  82 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado id",
        "Era esperado c_int",
        "Era esperado c_float",
        "Era esperado c_str",
        "Era esperado int",
        "Era esperado float",
        "Era esperado str",
        "Era esperado and",
        "Era esperado or",
        "Era esperado not",
        "Era esperado if",
        "Era esperado elif",
        "Era esperado else",
        "Era esperado while",
        "Era esperado end",
        "Era esperado false",
        "Era esperado true",
        "Era esperado input",
        "Era esperado print",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \"==\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \"<=\"",
        "Era esperado \">\"",
        "Era esperado \">=\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \"//\"",
        "Era esperado \"%\"",
        "Era esperado \",\"",
        "Era esperado \":\"",
        "Era esperado \"=\"",
        "Era esperado \"+=\"",
        "Era esperado \"-=\"",
        "<programa> inválido",
        "<lista_de_comandos> inválido",
        "<tipo> inválido",
        "<simples> inválido",
        "<operacao> inválido",
        "<atribuicao> inválido",
        "<entrada_de_dados> inválido",
        "<saida_de_dados> inválido",
        "<lista_de_expressoes> inválido",
        "<selecao> inválido",
        "<selecao_simples> inválido",
        "<selecao_senao> inválido",
        "<selecao_composta> inválido",
        "<selecao_alternativa> inválido",
        "<repeticao> inválido",
        "<expressao> inválido",
        "<expressao_> inválido",
        "<elemento> inválido",
        "<relacional> inválido",
        "<operador_relacional> inválido",
        "<aritmetica> inválido",
        "<aritmetica_> inválido",
        "<termo> inválido",
        "<termo_> inválido",
        "<fator> inválido",
        "<lista_de_comandos_A> inválido",
        "<operacao_A> inválido",
        "<entrada_de_dados_A> inválido",
        "<lista_de_expressoes_A> inválido",
        "<selecao_A> inválido",
        "<selecao_composta_A> inválido",
        "<selecao_alternativa_A> inválido",
        "<relacional_A> inválido",
        "<operacao_B> inválido"
    };
}
