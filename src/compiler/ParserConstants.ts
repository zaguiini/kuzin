export const ParserConstants = {
  START_SYMBOL: 43,

  FIRST_NON_TERMINAL: 43,
  FIRST_SEMANTIC_ACTION: 80,

  PARSER_TABLE: [
    [
      -1,
      0,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      2,
      -1,
      -1,
      3,
      -1,
      -1,
      3,
      -1,
      -1,
      -1,
      -1,
      1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      6,
      6,
      6,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      7,
      8,
      9,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      10,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      16,
      16,
      16,
      16,
      -1,
      -1,
      -1,
      -1,
      -1,
      16,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      16,
      16,
      -1,
      -1,
      16,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      16,
      16,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      18,
      18,
      18,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      17,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      21,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      22,
      22,
      22,
      22,
      -1,
      -1,
      -1,
      -1,
      -1,
      22,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      22,
      22,
      -1,
      -1,
      22,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      22,
      22,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      25,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      29,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      30,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      31,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      34,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      38,
      -1,
      -1,
      37,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      41,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      42,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      43,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      44,
      44,
      44,
      44,
      -1,
      -1,
      -1,
      -1,
      -1,
      44,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      44,
      44,
      -1,
      -1,
      44,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      44,
      44,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      47,
      47,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      45,
      46,
      -1,
      47,
      47,
      47,
      47,
      -1,
      -1,
      47,
      47,
      -1,
      -1,
      -1,
      47,
      -1,
      47,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      47,
      47,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      48,
      48,
      48,
      48,
      -1,
      -1,
      -1,
      -1,
      -1,
      51,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      50,
      49,
      -1,
      -1,
      48,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      48,
      48,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      52,
      52,
      52,
      52,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      52,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      52,
      52,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      55,
      56,
      57,
      58,
      59,
      60,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      61,
      61,
      61,
      61,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      61,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      61,
      61,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      64,
      64,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      64,
      64,
      -1,
      64,
      64,
      64,
      64,
      -1,
      -1,
      64,
      64,
      -1,
      -1,
      -1,
      64,
      -1,
      64,
      64,
      64,
      64,
      64,
      64,
      64,
      62,
      63,
      -1,
      -1,
      -1,
      -1,
      64,
      64,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      65,
      65,
      65,
      65,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      65,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      65,
      65,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      70,
      70,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      70,
      70,
      -1,
      70,
      70,
      70,
      70,
      -1,
      -1,
      70,
      70,
      -1,
      -1,
      -1,
      70,
      -1,
      70,
      70,
      70,
      70,
      70,
      70,
      70,
      70,
      70,
      66,
      67,
      68,
      69,
      70,
      70,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      71,
      72,
      73,
      74,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      75,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      76,
      77,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      4,
      5,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      5,
      4,
      4,
      5,
      -1,
      -1,
      5,
      4,
      -1,
      -1,
      -1,
      5,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      14,
      14,
      14,
      14,
      15,
      15,
      15,
      -1,
      -1,
      14,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      14,
      14,
      15,
      -1,
      14,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      14,
      14,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      19,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      20,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      23,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      24,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      28,
      27,
      -1,
      -1,
      -1,
      -1,
      26,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      33,
      -1,
      -1,
      -1,
      -1,
      32,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      36,
      35,
      -1,
      -1,
      -1,
      -1,
      35,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      40,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      39,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    [
      54,
      54,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      54,
      54,
      -1,
      54,
      54,
      54,
      54,
      -1,
      -1,
      54,
      54,
      -1,
      -1,
      -1,
      54,
      -1,
      54,
      53,
      53,
      53,
      53,
      53,
      53,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      54,
      54,
      -1,
      -1,
      -1,
    ],
    [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      11,
      12,
      13,
    ],
  ],

  PRODUCTIONS: [
    [46, 70],
    [49, 70],
    [51, 70],
    [56, 70],
    [0],
    [43],
    [45],
    [6],
    [7],
    [8],
    [2, 79],
    [40, 71],
    [41, 60],
    [42, 60],
    [47],
    [48],
    [60],
    [22, 24, 72, 25],
    [44, 24, 22, 24, 72, 25, 25],
    [5],
    [0],
    [23, 24, 50, 25],
    [60, 73],
    [0],
    [38, 50],
    [12, 60, 39, 43, 74],
    [52],
    [53],
    [54],
    [19],
    [14, 39, 43, 19],
    [55, 75],
    [19],
    [53],
    [13, 60, 39, 43, 76],
    [0],
    [55],
    [57],
    [15, 2, 16, 77],
    [58],
    [59],
    [18, 60, 39, 43, 19],
    [17, 24, 60, 25, 39, 43, 19],
    [2, 39, 43, 19],
    [62, 61],
    [9, 62, 61],
    [10, 62, 61],
    [0],
    [63],
    [21],
    [20],
    [11, 62],
    [65, 78],
    [64, 65],
    [0],
    [26],
    [27],
    [28],
    [29],
    [30],
    [31],
    [67, 66],
    [32, 67, 66],
    [33, 67, 66],
    [0],
    [69, 68],
    [34, 69, 68],
    [35, 69, 68],
    [36, 69, 68],
    [37, 69, 68],
    [0],
    [2],
    [3],
    [4],
    [5],
    [24, 60, 25],
    [32, 69],
    [33, 69],
  ],

  PARSER_ERROR: [
    '',
    'esperado EOF',
    'esperado id',
    'esperado constante int',
    'esperado constante float',
    'esperado constante str',
    'esperado int',
    'esperado float',
    'esperado str',
    'esperado and',
    'esperado or',
    'esperado not',
    'esperado if',
    'esperado elif',
    'esperado else',
    'esperado for',
    'esperado in',
    'esperado range',
    'esperado while',
    'esperado end',
    'esperado false',
    'esperado true',
    'esperado input',
    'esperado print',
    'esperado (',
    'esperado )',
    'esperado ::',
    'esperado !:',
    'esperado <',
    'esperado <:',
    'esperado >',
    'esperado >:',
    'esperado +',
    'esperado -',
    'esperado *',
    'esperado /',
    'esperado //',
    'esperado %',
    'esperado ,',
    'esperado :',
    'esperado :',
    'esperado +:',
    'esperado -:',
    'esperado id, if, for, while, print', // "<lista_de_comandos> inválido",
    'esperado tipo', // "<tipo> inválido",
    'esperado tipo', // "<simples> inválido",
    'esperado id', // "<operacao> inválido",
    'esperado id, constante, not, (, +, -', // "<atribuicao> inválido",
    'esperado tipo, input', // "<entrada_de_dados> inválido",
    'esperado print', // "<saida_de_dados> inválido",
    'esperada expressão', // "<lista_de_expressoes> inválido",
    'esperada expressão', // "<selecao> inválido",
    'esperada expressão', // "<selecao_simples> inválido",
    'esperada expressão', // "<selecao_senao> inválido",
    'esperada expressão', // "<selecao_composta> inválido",
    'esperada expressão', // "<selecao_alternativa> inválido",
    'esperada expressão', // "<repeticao> inválido",
    'esperada expressão', // "<repeticao_while> inválido",
    'esperada expressão', // "<repeticao_for_range> inválido",
    'esperada expressão', // "<repeticao_for_each> inválido",
    'esperada expressão', // "<expressao> inválido",
    'esperada expressão', // "<expressao_> inválido",
    'esperada expressão', // "<elemento> inválido",
    'esperada expressão', // "<relacional> inválido",
    'esperada expressão', // "<operador_relacional> inválido",
    'esperada expressão', // "<aritmetica> inválido",
    'esperada expressão', // "<aritmetica_> inválido",
    'esperada expressão', // "<termo> inválido",
    'esperada expressão', // "<termo_> inválido",
    'esperada expressão', // "<fator> inválido",
    'esperado EOF, id, if, elif, else, for, print', // "<lista_de_comandos_A> inválido",
    'esperado id, constante, tipo, not, input, (, +, -', // "<operacao_A> inválido",
    'esperado constante str, )', // "<entrada_de_dados_A> inválido",
    '<lista_de_expressoes_A> inválido',
    'esperada expressão', // "<selecao_A> inválido",
    'esperada expressão', // "<selecao_composta_A> inválido",
    'esperada expressão', // "<selecao_alternativa_A> inválido",
    'esperada expressão', // "<repeticao_A> inválido",
    'esperado EOF, id, and, or, if, elif, else, while, end, print, ), ==, !=, <, <=, >, >=, ,, :', // "<relacional_A> inválido",
    'esperado =, +=, -=', // "<operacao_B> inválido"
  ],
}
